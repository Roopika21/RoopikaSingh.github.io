// Program to print elements from 1 to 9 in 2D array


#include <stdio.h>

int main() {
    int disp[3][3];
   int i, j;
   for(i=0; i<3; i++) {
      for(j=0;j<3;j++) {
         printf("Enter value for disp[%d][%d]:", i, j);
         scanf("%d", &disp[i][j]);
      }
   }
   printf("Two Dimensional array elements:\n");
   for(i=0; i<3; i++) {
      for(j=0;j<3;j++) {
         printf("%d ", disp[i][j]);
         if(j==2){
            printf("\n");
         }
      }
   }
    return 0;
}



// Program to print alphabets in 2D array


#include <stdio.h>

int main() {
    int disp[3][3];
   int i, j;
   for(i=0; i<3; i++) {
      for(j=0;j<3;j++) {
         printf("Enter value for disp[%d][%d]:", i, j);
         scanf("%s", &disp[i][j]);
      }
   }
   printf("Two Dimensional array elements:\n");
   for(i=0; i<3; i++) {
      for(j=0;j<3;j++) {
         printf("%c", disp[i][j]);
         if(j==2)
         {
            printf("\n");
         }
      }
   }
    return 0;
}


//c program to print half pyramid of *


#include <stdio.h>
int main() 
{
   int i, j, rows;
   printf("Enter the number of rows: ");
   scanf("%d", &rows);
   for (i = 1; i <= rows; ++i) 
   {
      for (j = 1; j <= i; ++j) 
      {
         printf("* ");
      }
      printf("\n");
   }
   return 0;
}


//c program to print numbers in pyramid

#include <stdio.h>
int main() {
   int i, j, rows;
   printf("Enter the number of rows: ");
   scanf("%d", &rows);
   for (i = 1; i <= rows; ++i) {
      for (j = 1; j <= i; ++j) {
         printf("%d ", j);
      }
      printf("\n");
   }
   return 0;
}


//c program for upper side half pyramid of *


#include <stdio.h>
int main()
{
    int rows;
    printf("Enter the number of rows: \n");
    scanf("%d", &rows);
    for (int i = rows; i >= 1; --i)
    {
        for (int j = 1; j <= i; ++j)
        {
            printf("* ");
        }
        printf("\n");
    }
    return 0;
}


C program to print alphabets in Halh pyramid 

#include <stdio.h>
 
int main()
{
  int i, j;
  char ch, alphabet = 'A';
 
  printf("Enter the character till which you want to print in uppercase: ");
  scanf("%c", &ch);
 
  for (i = 1; i <= (ch - 'A' + 1); ++i)
  {
    for (j = 1; j <= i; ++j)
      printf("%c ", alphabet);
 
    ++alphabet;
    printf("\n");
  }
 
  return 0;
}

             OR

#include <stdio.h>
 
void main()
{
  int rows, i, j;
  char ch = 'A';
 
  printf("Enter the no. of rows: ");
  scanf("%d", &rows);
 
  for (i = 0; i <= rows; i++)
  {
    for (j = 0; j <= i; j++)
    {
      printf("%c", (char)(ch + i));
    }
    printf("\n");
  }
}

OUTPUT:
Enter the no. of rows: 5
A
BB
CCC
DDDD
EEEEE
FFFFFF


//C program to print * in pyramid pattern


#include <stdio.h>
int main()
{
    int i, space, rows, k = 0;
    printf("Enter the number of rows: \n");
    scanf("%d", &rows);
    for (i = 1; i <= rows; ++i, k = 0)
    {
        for (space = 1; space <= rows - i; ++space)
        {
            printf("  ");
        }
        while (k != 2 * i - 1)
        {
            printf("* ");
            ++k;
        }
        printf("\n");
    }
    return 0;
}

//C program to print * in pyramid pattern

#include <stdio.h>
int main()
{
    int i, j, rows;
    printf("Enter the number of rows: \n");
    scanf("%d", &rows);
    for (i = 1; i <= rows; i++)
    {
        for (j = 1; j <= 2*(rows - i); j++)
        {
            printf(" ");
        }
       for(int k=1;k<2*i;k++)
        {
            printf("* ");
         
        }
        printf("\n");
    }
    return 0;
}

OUTPUT:
Enter the number of rows: 
6
          * 
        * * * 
      * * * * * 
    * * * * * * * 
  * * * * * * * * * 
* * * * * * * * * * * 

//C program to print numbers in pyramid pattern


#include <stdio.h>
int main() 
{
   int i, space, rows, k = 0, count = 0, count1 = 0;
   printf("Enter the number of rows: ");
   scanf("%d", &rows);
   for (i = 1; i <= rows; ++i) {
      for (space = 1; space <= rows - i; ++space) {
         printf("  ");
         ++count;
      }
      while (k != 2 * i - 1) {
         if (count <= rows - 1) {
            printf("%d ", i + k);
            ++count;
         } else {
            ++count1;
            printf("%d ", (i + k - 2 * count1));
         }
         ++k;
      }
      count1 = count = k = 0;
      printf("\n");
   }
   return 0;
}

OUTPUT:
Enter the number of rows: 5
        1 
      2 3 2 
    3 4 5 4 3 
  4 5 6 7 6 5 4 
5 6 7 8 9 8 7 6 5 
